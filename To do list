#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;
struct Task 
{
    string description;
    bool completed;
};
void addTask(vector<Task> &tasks, const string &description) 
{
    Task newTask = {description, false};
    tasks.push_back(newTask);
    cout << "Task added successfully!\n";
}
void viewTasks(const vector<Task> &tasks) 
{
    if (tasks.empty()) 
	{
        cout << "No tasks available.\n";
    } 
	else 
	{
        cout << "To-Do List:\n";
        for (size_t i = 0; i < tasks.size(); ++i) 
		{
            cout << i + 1 << ". " << (tasks[i].completed ? "[X] " : "[ ] ") << tasks[i].description << endl;
        }
    }
}
void markCompleted(vector<Task> &tasks, size_t index) 
{
    if (index >= 0 && index < tasks.size()) 
	{
        tasks[index].completed = true;
        cout << "Task marked as completed!\n";
    } 
	else 
	{
        cout << "Invalid task index.\n";
    }
}
void removeTask(vector<Task> &tasks, size_t index) 
{
    if (index >= 0 && index < tasks.size()) 
	{
        tasks.erase(tasks.begin() + index);
        cout << "Task removed successfully!\n";
    } 
	else 
	{
        cout << "Invalid task index.\n";
    }
}
int main() 
{
    vector<Task> toDoList;
    int choice;
    string taskDescription;
    do 
	{
        cout << "\nTo-Do List Manager\n";
        cout << "1. Add Task\n";
        cout << "2. View Tasks\n";
        cout << "3. Mark Task as Completed\n";
        cout << "4. Remove Task\n";
        cout << "5. Exit\n";
        cout << "Enter your choice: ";
        cin >> choice;
        switch (choice) 
		{
            case 1:
                cout << "Enter task description: ";
                cin.ignore();
                getline(cin, taskDescription);
                addTask(toDoList, taskDescription);
                break;
            case 2:
                viewTasks(toDoList);
                break;
            case 3:
                size_t completeIndex;
                cout << "Enter the index of the task to mark as completed: ";
                cin >> completeIndex;
                markCompleted(toDoList, completeIndex - 1);
                break;
            case 4:
                size_t removeIndex;
                cout << "Enter the index of the task to remove: ";
                cin >> removeIndex;
                removeTask(toDoList, removeIndex - 1);
                break;
            case 5:
                cout << "Exiting the program.\n";
                break;
            default:
                cout << "Invalid choice. Try again.\n";
        }
    } 
	while (choice != 0);
    return 0;
}
